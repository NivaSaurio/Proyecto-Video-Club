<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABQGAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABgKSURBVHja7Z37VxbV/8UzSxOSErG0RDEUL3QhLwlpBUqZpOYK1KSiUrTWyiS6LO9d
        lpm6DMXINE0loyUCRZqWeamsVExJK81Ksxv1b5zv2vNdwwfpeWaey8ycM3P2D3v5ST/iw3DOa97nnP3e
        55JLLrlEUBSlrfgQKIoAoCiKAKAoigCgKIoAoCiKAKAoigCgKIoAoCiKAKAoigCgKIoAoCiKAKAoigCg
        KIoAoCiKAKAoigCgKIoAoCiKAKAoigCgKIoAoCiKAKC8VGJiorj55pvFpZdeyudBAFC6KSUlRbz//vui
        uLhYdOzYkc+EAKB0Uvfu3cW+ffvEmTNnRGlpqbj88sv5XAgAShclJyeLvXv3ipaWFnH27FlRXl4uunTp
        wmdDAFA6AeCvv/4Sf/75pzh37pxYsmSJSEpK4vMhACidAPDHH38YELhw4YJYuXKlsTzgMyIAKI0AYEIA
        v65bt0706tWLz4kAoHQCQFsQVFdXi379+vFZEQCUbgCA8PsNDQ1iyJAhfF4EAKUbAEwI7NmzRwwbNozP
        jACgdAOACYHPP/9c3HnnnXxuBAClGwBMCBw5ckSMHz+ez44AoHQDgAmBEydOiClTprB/gACgdAOACYEf
        fvhBzJgxg9ZhAoDSDQDmESGsw2VlZeKKK67gsyQAKJ0AYEIA1uHFixeLrl278nkSAJROADAh8Ntvv9E6
        TABQOgKA1mECgNIcAO2tw2lpaXy2BAClGwDME4L6+npahwkASkcA0DpMAFCaA4DWYQKA0hwAba3DBQUF
        fNYEAKUbAEwINDc3i6lTp9I6TABQugGA1mECgNIcALQOEwCU5gCgdZgAoDQHQPvUYfzb/BkQAJRGADAh
        8Pvvv9M6TABQOgKA1mECgCIAWk8I6urqxODBg/nzIAAo3QBA6zABoLU6deokrrrqKq0BQOswAaCtMjIy
        xMiRI7UHAFOHCQAtVVxcLO677z4CgKnDBICO5X9VVZWYNGmSLwCAozsz/cdtCMA6/Pjjj9M6TAAEV7h0
        89ChQ2LixInKAwB//sEHH4iamhrPIEDrMAEQaE2ePFn88ssvYsKECb6oAEpLS8X1118v3n33XU8gQOsw
        ARBYdezYUaxatcooq2UCAEm+dgDARPz+++/F0KFDjb+TmprqKQSQOrxixQpahwmA4AgW2AMHDhi+eNUB
        8Pfffxvlf9vjSq8hAFC++eabtA4TAMHQ3XffbZT/eLupDgD82YIFC/7zd72EgAkC/HvYO+EYIgB8rSVL
        lhhv1vPnz0uNzLIDACbdzz//LMaOHRvy73sNATN1mNZhAsDX9tuPP/7YAAA2uVANqAoA/D6WKlaltwwI
        0DpMAPhWOTk54vTp08aE+fXXX0V+fr6yAACkKioqjE1Lq68jAwK0DhMAvlR5eXnrhEMFoDIAsEdRVFQU
        0deSAQGmDhMAvtKVV14pamtrjTerCQBVlwCYyE1NTWLAgAERfz0ZEIB1mKnDBIAvdMstt4iTJ0+2ThCV
        AQBIbdmyJWonngwIMHWYAPCF4KZrO3hVrwCefPLJmL6uDAjQOkwAKC0MzM2bN7eW/yoDwHT/xbPTLsMn
        QOswAaCssJbGmrrthFAVAIBUY2OjuPrqq+P6+jIggI1LpA7je+O4IwCU0YMPPmhYf/2wBMB/L1q0yJF/
        QwYE8CtThwkAZXTZZZeJtWvXXlT+Q6r6AGBTdhJMXkOgbeowrcMEgHRhAqD3P9REy83NVQoA+N8HDx50
        /O0pAwK0DhMASgixXyj32w9QAOCuu+5SCgCoUtasWWNULW6AUAYEdu/e3drOTBEAnqpDhw5i2bJl/yn/
        VQUA9immTZvmajUkAwKoamgdJgA81zXXXBP2rF01AGBSHjt2TAwcOND1JZEMCDB1mADwXHl5eUZLbajB
        rhoAUKVg46xLly6e7IvIgABThwkATzV//vywzTYqVgBPPfWUZ/9+nz59pECAqcMEgCdCjNaHH34Ycv2v
        GgAwCX/88UcxYsQITz+DLAjAOjx37lxahzlR3dPw4cONt024wa0SAACpnTt3im7dukk5Jt22bZvnPgH4
        MGB4QpcmAUA5rjlz5lgOatUAgKgyWZ8FlYAMCDB1mBPVFSUkJIj33nsvbPlv5u3dcccd0gGAz4i34bhx
        46Q+MxnLAaYOc7K6oszMTGPHOdxgxu+fOXNG6uWgJgBaWlqMiC1c/CH7ucmoBNpah9PS0ggAKn6VlJQY
        bxarAacKAP79919RWVnpivsvniNCry8t1dQ6zMnqtHDx54YNG8KW/yYATp06ZaQEyQYAPgu6FVV6hmYl
        IAMCmlmHOWGd1g033CAOHz5se+NOQ0ND3D338QLgs88+E83NzWLQoEHKPUdZywHTOixzf4YA8LEKCwuN
        3WW7NaeXpptwANi/f79x6y82LVV8ljIhAIhrYB3mhHVSyNB//fXXbct/bBDedNNN0gGACgBZeqq3U3t9
        OqCRdZiT1knhKAnlo135v2nTJukutJSUFGMZcvvttyv/XM0jQhl7AgFPHeakdVLmxZ9WbyssD1TYdEOn
        IqqVHj16+OLZyjwiNFOHvWiUIgB8rJdeesmy/McbBelAffv2lf5Zr732WlFcXGx79Rch8L/UYViHA5Y6
        zEnrlNpe/GlV/sN6qsKaEh54P2bmyYQAqrfly5cHyTrMieuUsJaGucfK/Qf7r8wk4FCJRX581jIhYFqH
        e/bsSQBQ/9Ozzz5rOSDx9ofJBJtvfF7+hYAJgq1btwbBOsyB5ISwLtyxY4ft+v+FF17g8woIBPDzrKur
        87t1mIPICWVlZV108WeoNwau20JGAJ9XMGzDba3D8VyjRgAEQLNnz7Yt/9EenJiYyOcVQAjA+zF69GgC
        QEfB0IOrtK3Kf2wcIYeOzyu4ywFYh++9916/uQY5cOLVjTfeKI4fPx524GFwHD161LggVLXQkqAl4ciG
        AMaBz5Z5nMDxvv3hprMr/9944w3lrKTILMBNukFzt8lsIPrqq69cv1eBAFBIsPTaWX/hIJs0aZJSn7t/
        //7iiy++MD77/fffz+WAA8eCeJbTp0/nHoAuwvHPl19+abnxhD/bt2+fUnlzCCyBG9EMA8UutgpxYG5B
        wKu3f0VFhR+rKU7kWG20b731lu2uM/4c/QEqOe4Q/tnesbhw4UJf9QREKoR6WLkznZr8gHx6ejpPAXQR
        2kPPnz9vObDM3D+VjofQANT+shJ8TngYRo0aFcjjWbdL/59++snPyyhO5mh16623GhdN2r39MckQMokb
        glTx/ZeXl4cMK8VnRbksM6LMDXfm9u3bLY9nnQDAq6++aiyrCAANhAkCD3gkhhMVYr/aCsdTVseV6HQr
        LS0NzM8qJyfHuO7MrfIfYNm1a5fo3bs3rcA6CG9Q3PZz4cKFiCY/4qTgEVDlbfjOO+/Y9ip8/fXXgYnF
        xr6GW85A/HyRFKRSZycB4EG7r9VlH+3fDhs3bhSdO3dW4rM//PDDxnGk3WfHhFm9erXvL81E2tGnn37q
        qjV4wYIFQdg45cSORIjNsuv2a19OT5s2TZkzf9z8E+myBfFXqvkWolVBQYFx3ZmbXYCADPMANBAoP2/e
        PMubfkLFfuEcWoUzfyTYRPMmNDvc/OoNwA1HdsnM8ZT+uEchQCcmnOB2ys/PN1p5I91MMmO/VCgPceZ/
        +vTpmDbCUOL6MQ47kotZYhX2f+bOnevbJCUCIErhLbhz586I3yYqxX6FOvOP5k333Xff+fJN98gjj0S0
        URtL6Y9o8m7dugVpjHOShxOad1555ZWo3p4YJAgGlR37ZZ75x3vMhQwDP3kDYMXFMa3T5b/Z0RnAOwM5
        0cNp4sSJUdtIVYn9Ms/84y2D/eYNgEnLKpkp1nU/XJ8zZ84M4jjnRA+3jsS1WdFMIFViv3Dmj5uHnHgL
        mt6AIUOG+OLn9swzzzhu/MEzWL9+fdDuAyAA7Hr8o317qhL7FemZfzQTwA/eAKzNP/roI0fLf7PHPzMz
        M6jjnRO+vXB+b9fjr2rsVzRn/tFejaW6N2DMmDHG53QKfD7u8ScA3OzxVzX2K5Yz/6B4A3BciaYcp9/+
        qHwCeB8gARBPj7+qsV/xnPn73f6KhhwnKx+f9/gTAPH0+McyYGTHfsVz5h8Eb0BhYWHMP7sA9vgTAG71
        +KsY+4Uzf1xLFqlVOWjeACx9sEvvFPwAgKVLl/q5x58AcKvHX8XYLxw7fvvtt55diqGaNwD7Nvj+nVj6
        ACIwcvm8x58AcKPH3yr2C9lzqvb5u7EhqJI3YNasWezxJwDi6/GP9e2JidfQ0CAt9svpM/9oILBmzRrp
        3gAAsLa21jEABqTHnwBwo8dftdgvN878o/UGyN4oy87OdiT2C2MAPf7YTNVsHrDHP55JICv2y80z/2i9
        ATLXy07Efpk9/j693JMAiEVjx46Nqsc/3FsDnnsZZbAXZ/6RStadAk7FfgWwx58AiKTH34lOOVwN5ueN
        Lyd2zQFBGW658ePHxx37hc8fwB5/AsDJHn+rJpG+fftK+T7gOXC68SWW0hmttzJKZ8R+waYbz/ePn2FT
        U5MYNmyYzhvh7PGP9c0hO/YLb0C3r72yA4Cs8h/t2t98801cVRycg0G6B4EAcKHHX+XYL2wE4npvGRuB
        +Df37NkjbQMQx5/xbODi82/YsCGoPf4EQKioqFh6/K3cYt27d5f+faH7ENd8ewkB2UeACQkJorq6Ouby
        X4MefwLAqR5/lWO/TJWUlBhmIF1MQFlZWTHHfpk9/sXFxZz8ugAg1h5/lWO/2iopKUls3rzZkw1BFWzA
        8cR+adLjTwA40eOvcuxXe40YMSLia8v83AiUnJwc8+kHxsD+/fsNByUnviYAQESXk155FWK/wjU1Pffc
        c4FvBc7NzY0p9kuzHn8CIN4ef1Vjv6zUs2dP0djY6MqGoHnmLzMMJJ7YL3x+/F1NevwJgHh7/FWN/ZLl
        DZB55h9v7Jd5apOamsoJrwMA4u3xVzX2S5Y3QJVA0Fhiv8we/3vuuYeTXRcAxNvjr2LslyxvgGl6kr12
        BtiwmRtL+a9hj7++AECPPwIinF4H4+u9+OKLvukYc8oboErwRyyxX/js9fX1Ovb46wkAJ3r8rWK//NQv
        7oQ3QKXor9mzZ7PHnwBwv8dfxdivWHXbbbfF5Q1QJfwTfv3t27dHBTPs/5SVlena468fAMwefzfccDJj
        v+LdDH3++ed9H/+dk5MTVewXPvu2bdt07vHXCwBO9firFvvllDcgWueczD7/UMImXqR7Ouzx1xAATvX4
        qxb7JdMbIPvMP9bYL/b4awYAp3r8VYz9kuENkN3n314FBQURx36xx18zAOCtvGrVKtcmP77uoUOHpMV+
        OamMjAxbb4B55j958mQlPjNiv5DhEMnyhT3+GgIAPf4YsG51wGHg4c0ZFBMJvAFWTjpMosrKSmWWO5HG
        frHHX0MAONnjr3Lsl9PegC1btoR8o6p23ZcZ+xWJnds0K7HHXxMAoMd/3bp1rsZgmf73lJSUQP3Aw3kD
        sNeBqHGVItzQzGVX/rPHX0MAON3jH25gwVUYxEap9t4ATLKamhqlzs0jif0ye/xV2bMgAHzY4281uLCj
        HLQKoL03QLUzf1Nw8dkBnj3+mgHAjR5/u/Qf9P8HEQJtvQGLFi1SaqMTlYideQljgD3+GgEAaTBPP/20
        sVb1OgN/7dq1gYMA3po4YoPJRpUzf1N5eXmWsV/s8dcQADiLx66/rKuwggiB9PR0IztBtT2KpUuXWv6c
        AYCXX37Z8AlwAmsCALyxHn30UaPbT9aV2EGEgIpNXVaxX5j8aAzCaQafl2Z7AFgGPPDAA+L48eNSIaDC
        jUBBFX6+VmYlVAbo+mSnn8bHgFj7xXsxJCsBNas8u9gv/MzRqMTnpbkTEPHUBw4cYCUQIMHdeezYMcvN
        P7gzx4wZw+fFXoD/N4vs2rWLlUBAZBf7hZ8zOj+Z8UcAtGrgwIFix44drAR8rkhiv/BnK1asMPaC+MwI
        gIuOCNHkIgMAfq4EkKSkSudfdna2bewX7N8If+GkJQBC2lvh2oN7z+0LMoNSCaDzT5XuP2zsWVVxZr9/
        ELIZCAAXLaTLli0z3IKyIOCnSuCxxx4zAjf9EPuF8r+qqkrpa9kIAEVahREiiRgpVgLhlZCQINavX6+E
        ExB9CXaxX8gFYOAHARCROnfubMR4o1WUlUD4zVM47rD2lh37tXr1alvrL24FwmfmhCUAIh5YKHFlWYdV
        rwQQp4ZNt5EjRyof+wU4oAuUiT8EQNTWYdwoK8s6rGolgNZfvHVhqpHtqY809gseAU5WAsB31mEVKwGz
        4QYttzIBgDd6uIzCtuX/qVOnjCAYTlYCwJfWYdUqgfz8fCNFF3skMgEAMO7du9e2/K+rq2PWPwHgTJwY
        UmR0rwQWL15sTCwkAskEAKBoBwD8GTIMOVEJAMd2v2tra7WtBBCr1tjY6AsAmNeyo3rjRCUAHLcO63hE
        OHz4cCNOC5NOdQAAUohmZ68FARAo67BMCDzxxBPG92u+XWUDwOpeRwAA0V+cpASAa9ZhxErLsA7LgAAa
        f8zLNvwAAGxUMviTAHBViYmJ0qzDXkNgwIABoqmpyZhwKgCgR48eYQGA3zt48KC47rrrOEkJAPffjHPm
        zGnNyQ8qBKZMmdJqulEBAAj2CHc0iyqloqIiMBezEgA+sA7LSh324ogQE6ntVdsqAAD7MHjLh3reWJYV
        FRVxbBIA3lqHZaUOuw2BXr16XfS2VRkA+O/Dhw8bfQIclwSA5xo3bpwU63BlZaVrEECQJrz/5hJHZQCg
        Snn77bd55x8BoJ912C0IzJ8//6LvRWUA4GgWnZwchwSAltZhp5cDSUlJoqGh4aKmG1UBgM/V3NwsMjMz
        OQYJAPkaNGiQlNRhJysBgAwddW1POFQFACBVU1NjHM9y/BEAWluHnYLArFmzwvrsVawAcAs0xx0BoJx1
        GKGUXluH44UA4tE2bdr0n557FQFgXvvNiz8JACWVnJwsXnvtNc+tw/FAAEdpR44c+c8SRhUAtL0JGJBC
        pyI6FjneCAAlJSt1OFYIwNcAYKm4BOjdu7eR9W8CAL/i2XKcEQC+sA4jUcfLzcFoIQBj08qVK0NGbqkA
        gNTU1Fa/hXnxZ15eHscYAeAP67CM1OFoIACvfbhmG9UAACEbAJeEcHwRALQOO+ATyM3NNYI/Qy1VVFkC
        mABAlbJ8+XJe/EkA+NM6DO+6apXAvHnzbOO2VAEALv6cMGECxxMB4E+NHj3ac+uwFQTg/quvrw8bua0S
        AFpaWozNwD59+nAsEQC0DjsBgaysLHHy5MmwJxUqAeCff/4x4tmwr8JxRAD4Wkgd9to6HAoCM2fOtPw7
        KgEAn2f69OkcPwQArcNOQADuv40bN9reuKMCALB3gos/MzIyOHYIgOAIR3Bepw4DAgg6TUtLC+n+U/EY
        8OjRo6K6utrwVnDcEACBEiaj19ZhxH7NmDHD2FVXfQlggooXfxIAtA47JMAGrb92/z8VAIA+hU8++YQX
        fxIAwRbW5F5ahyMBjQoA6N+/v7FswZElxwkBQOuwh1IBAOnp6eKhhx7i+CAAaB3WEQC4D6Ffv34cGwSA
        ftZhGanDqgGgQ4cOhjgmCABahzUEAEUA0DosIXWYAKAIAEUkK3WYAKAIAI2twwQARQAoJARkemkdJgAo
        AkBB6zBScbywDhMAFAGgoLp27SoWLlzounWYAKAIAEWFzjjcjuOmdZgAoAgAja3DBABFAPjAOlxUVCRO
        nDjhOAQIAIoA0Ng6TABQBIDPrMPtb9IlACgCQCMNHTrUMeswAUARABpbhwkAigDwsXV469atcfkECACK
        ANDYOkwAUARAAKzDsaYOEwAUARAAIXU4FuswAUARABpbhwkAigAImHW4pKQkYuswAUARAAG0DhcWFkZk
        HSYAKAJAY+swAUARAAHWqFGjLFOHCQCKAAi4kDq8e/fukBAgACgCQAMNHjw4pHWYAKAIAI2sw+1ThwkA
        igDQzDpcVVXVah0mACgCQDMlJye3WoexJCAAKAJAU+vwuXPnxNmzZwkAig9BR+twWVmZYRjKzs7mMyEA
        KN3UqVMnMXXqVOOUgM+DAKA0tg/zORAAFEURABRFEQAURREAFEURABRFEQAURREAFEURABRFEQAURREA
        FEURABRFEQAURREAFEURABRFEQAURREAFEURABRFEQAURREAFEURABRFeav/A7Ykxo1HboM5AAAAAElF
        TkSuQmCC
</value>
  </data>
</root>